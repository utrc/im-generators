package GenericServiceEvents_pkg ;

import UxASNodeLibEvents.* ;
import iml.software.* ;
import iml.ports.* ;
import iml.connectivity.* ;
import iml.contracts.*;

type [Thread] GenericLastService {
	[Input] CmdRequest_in: EventDataPort<Bool>;
	[Output] CmdResponse_out: EventDataPort<Bool>;
  
	processing_path : FlowPath ;
	assert {processing_path.start = CmdRequest_in.flowpoint && processing_path.end = CmdResponse_out.flowpoint};
	

	gmonitor : responds_once ;
	c1 : Connector < Bool > := connect<Bool>(CmdRequest_in.event, gmonitor.b);
	c2 : Connector < Bool > := connect<Bool>(CmdResponse_out.event, gmonitor.a);
	
	d1 : iml.ports.delay ;
	c5 : Connector < FlowPath > := connect<FlowPath>(processing_path, d1.f);
	c6 : Connector < Int > := connect<Int>(1, d1.n);
	
	[Guarantee,Output] g : Bool := {gmonitor.holds && d1.holds}  ;
	
}