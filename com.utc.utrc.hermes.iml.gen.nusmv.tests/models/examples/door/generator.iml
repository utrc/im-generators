package com.rtx.hermes.examples.sm;
import iml.sms.* ;

/*State type definition*/
type State enum {OPEN, CLOSED, LOCKED} ;

/*Input data type*/
type Input enum {OPEN,CLOSE, LOCK,UNLOCK};

type DoorGenerator exhibits(ValidTransition<State>) {
	init : State->Bool := fun(x:State) : Bool {x = State.OPEN};
	/*The transition function*/
	transition : (State,State) -> Bool := fun(x:State,xp:State) {
		xp = case {
			x = State.OPEN : State.CLOSED ;
			x = State.CLOSED : State.LOCKED;
			x = State.LOCKED : State.OPEN;
			true : x ;
		}
	};
	/*The definition of an output*/
	out_command : Input :=  case {
		state = State.OPEN : Input.CLOSE ;
		state = State.CLOSED : Input.LOCK ;
		state = State.LOCKED : Input.UNLOCK;
		true : Input.CLOSE ;
	};
}